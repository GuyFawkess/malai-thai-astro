---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import PriceList from "../../../components/PriceList.astro";
import BookButton from '../../../components/BookButton.astro';

export async function getStaticPaths() {
  const services = await getCollection("services");
  return services.map((service) => ({
    params: { id: service.slug },
    props: { service },
  }));
}

const { service } = Astro.props;
const { data, slug } = service;
const title = data.title_es || data.title;
const paragraphs = data.paragraphs_es || data.paragraphs || [];
const { img, images = [], prices = [] } = data;
const currentLang = 'es';
---

<Layout title={title}>
  <div class="container mx-auto px-4 py-16 max-w-6xl">
    <h1
      class="text-3xl font-semibold text-[var(--color-terracotta)] mb-12 text-center"
    >
      {title}
    </h1>

    <div class="flex flex-col gap-16">
      {
        paragraphs.map((text, index) => {
          const isFirst = index === 0;
          const isEven = index % 2 === 1;
          const imageUrl = isFirst ? img : images[index - 1];

          if (!imageUrl) return null;

          return (
            <div class="md:grid md:grid-cols-2 md:gap-8 items-center">
              <div
                class={`w-full h-78 rounded-lg shadow-md ${isEven ? "md:order-1" : "md:order-none"}`}
              >
                <!-- For non-first images that have animations -->
                {isFirst ? (
                  <img transition:name={`img-${slug}`} data-astro-prefetch src={imageUrl} width="600"
                  height="400" class="h-full w-full object-cover rounded-lg" alt={`Masaje tailandés: ${title}`} />
                ) : (
                  <img 
                    data-animate="fade-up" 
                    data-duration="1000"
                    src={imageUrl}
                    loading="lazy"
                    decoding="async"
                    width="600"
                    height="400"
                    class="h-full w-full object-cover rounded-lg"
                    alt={`Masaje tailandés: ${title}`}
                  />
                )}
              </div>
              <div
                class={`mt-10 md:mt-0 text-xl text-[var(--color-deep-charcoal)] ${isEven ? "md:order-none" : "md:order-1"}`}
              >
                <p>{text}</p>
              </div>
            </div>
          );
        })
      }
    </div>
    {prices.length > 0 && (
      <div class="mt-16">
        <PriceList prices={prices} currentLang={currentLang} />
      </div>
    )}
  </div>
  <BookButton currentLang={currentLang} />
</Layout>